Hackleberry Finn Hackathon Project for CodeCraft School, August 2017

GENERAL

1.1. What things did you think went well on the project?
Joe, Eric, and I were on the same page with a positive mindset from the beginning. We were aware that this was our first hackathon, and wanted to avoid doing redundant work. Joe set us up with a Trello.com board, which was very useful for tracking initial ideas, what needed to be done, what was currently being worked on, and what was done. We quickly agreed on our name and on the initial concept for our "calorie and mood tracker" web app. We delegated roles quickly, with no fuss. Paul = HTML/CSS/Express Routes, look/feel/design, graphical representation of data/charts; Joe = Mongo DB and mongoose schema, login functionality; Eric = research Nutritionix.com API calls. I was able to quickly build the site, the routes, and the page structure. Joe quickly created the schema based on some whiteboarding we had done.

1.2. What was the single most frustrating part of the project?
Eric was not as quick to adapt to the multitude of new technology we were implementing, and Joe and I oftentimes found ourselves having to sacrifice time spent on our own Trello board tasks in order to explain what I felt were somewhat "basic" web developer concepts. For example, Eric didn't know bash commands, tab auto-complete, up-arrow former commands, basic git commands, etc. Eric also watched a YouTube video about the Nutritionix API call and simply copied/pasted the rather sloppy code from that video's presenter, which wound up being an almost day-long refactoring project for myself, moving the API call from the front-end over to the backend (in server.js). Eric was also frequently absent from our hackathon due to medical issues, which I understand but led to a bit of minor frustration that Joe and I were basically doing all of the work.

1.3. How would you do things differently next time to avoid this frustration?
Communicate up front whether or not the tasks were realistic with regards to the experience level of the team member.

1.4. Were there any other issues/changes that should be considered?  Please offer suggestions for methods of improvement.
Nothing comes to mind.

=-=-=-=-=-=-=-=-=-=-=-=

1. Success Criteria:

What rating would you give for each of the success criteria defined in the Project Charter?  (Indicate as a percentage).

Success Criteria #1 : Page structure/look/feel = 100%
Success Criteria #2 : Login via Facebook API = 95% (this worked well when complete, but took almost four of our five days, and a simpler login method could have freed Joe up to help me more with all of the API calls and Chart.js functionality)
Success Criteria #3 : Graphical representation of data = 75% (I had to resort to dummy data to show how the chart should work in theory, rather than passing in user data from the database to update the chart dataset arrays dynamically)
Success Criteria #4 : User experience = 90% (I feel with more time I could have "prettified" the pages/results more, and added functionality to delete/remove unwanted food and activity items from the <ul> lists)

2. Project Management & Scheduling:

2.1. Were the goals of the project clear to you?
They were to me, since I had a very clear model of the project in my mind from the start.

2.2. How complete do you think the planning was before the actual commencement of work?  What could have been improved?
Joe should have communicated more about how long the Facebook login would take, and have a fallback plan after perhaps two days to a simpler login method. Eric should have spoken up sooner about the API call process being perhaps a bit over his head.

2.3. Was the schedule realistic?
Since we are all "noobs" and this was our first hackathon, I stressed from the beginning that we should have a very simple goal, meet that goal, and then add features as time permitted. I think the chart.js component (and the contact form page, which I spent about 1.5 hours researching, finding out about PHP or SMTP, then scrapping) were a bit loftier goals for the time given, but overall I think we accomplished over 80% of our goals and I am satisfied with that.

2.4. Was the schedule detailed enough?
Trello made it easier, but there were no real "deadlines" for the work being done. This could have pushed us harder, however it could have led to increased tension with our group/personalities, so I felt it best not to press the issue.

2.5. What were the biggest obstacles to meeting the scheduled dates/milestones?
Eric's lack of skills and lack of presence led to myself having to shoulder essentially everything on this project aside from Joe's work on the schema and login/home page. This led to a lot of questions to my teacher and TA's for assistance, a more chaotic frame of mind, and thus some lack of finesse on the final product.

3. Resources:

3.1. Were there enough resources assigned to the project, given the schedule constraints?  If no, where could there have been more resources assigned?
I think so. Our teacher and both TA's were omnipresent and very helpful at all times. Google, Stack Overflow, Chart.js and Nutritionix.com docs were very helpful.

3.2. Was there sufficient time for working on this project in addition to your day-to-day job?  How could this be improved?
Yes, since it is understood that CodeCraft students are in a "bootcamp" environment and have to sacrifice time. Myself, I run my own small computer consulting business and had to put out a few fires for some clients during the week, but it was a minimal intrusion.

4. Testing:

4.1. Was the Test Plan sufficient in identifying potential problems?
Our testing basically consisted of lots of console.log statements in our code, allowing us to check both browser and node consoles for errors. We also checked the web page as a potential user frequently and this worked well.

4.2. Was the process for reporting problems clear, easy to follow, and efficient?  If not, what improvements would you recommend?
There really was no error reporting on paper, rather Joe and myself talked across the table we shared about any gotchas to be aware of, when we were pushing git commits, etc. I am not sure of how we might have implemented error reporting, since I am new to hackathons and group dev projects like this.

4.3. Were issues dealt with and resolved in a timely and satisfactory way?  Were you satisfied with the level of technical support received?
Absolutely, the teacher and TA's were able to troubleshoot complex and diverse problems for everyone in a timely manner.

5. Communication:

5.1. Was project communication handled efficiently and effectively in disseminating information and directives?  If not, how could it be improved?
This was my achilles heel in the project. I should have communicated with Eric more openly up front about his comfort level with the tasks assigned. However, during the project we used Slack frequently to communicate, which worked very well and in a timely manner.

5.2. Were there enough team meetings, and were they useful?
We had an initial meeting at Eric's apartment to make sure all of our machines had the node modules installed, the git repo created, and an initial pull to sync the project. After that, we didn't have team meetings, and Eric was absent a few times, but we talked across the table during the hackathon and via Slack when needed.

5.3. Were there other forms of communication that would have been helpful?
We talked about using join.me or maybe zoom or team-viewer, which could have been useful if implemented.

6. Team/Organization:

6.1. Did you have all of the information needed to do your job?  Were the roles and responsibilities well defined and communicated?
I feel the roles were delegated as best as they could be. I think Joe and I both understood that Eric's level of coding expertise was a bit less than our own, so we gave him simpler tasks like the API call research, some calorie burn data results, and fleshing out the HTML of the About page. I had great resources available as mentioned above and utilized them frequently.

6.2. Did you think the team worked well together?
Yes, we had no arguments and were very vocally supportive and encouraging of each other. I believe that encouragement is key to success.

6.3. Were there other groups/individuals that should have been a part of the project team?  If so, please specify.
No, since we were assigned our teams/members by our lead instructor.

6.4. What would you do to make the project team more effective?  What project team organization changes would you recommend?
I believe Trello could have been broken down into more detail, with more "to do" items available which allowed team members to shift to more fine-tuned elements of the project.
